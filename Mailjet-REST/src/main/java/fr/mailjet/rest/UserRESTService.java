package fr.mailjet.rest;/* *  * Mailjet * %% * Copyright (C) 2012 Pitton Olivier - olivier dot pitton at gmail dot com * %% * Licensed under the Apache License, Version 2.0 (the "License"); * you may not use this file except in compliance with the License. * You may obtain a copy of the License at *  *      http://www.apache.org/licenses/LICENSE-2.0 *  * Unless required by applicable law or agreed to in writing, software * distributed under the License is distributed on an "AS IS" BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. * See the License for the specific language governing permissions and * limitations under the License. * #L% */import java.util.Map;import com.sun.jersey.api.client.UniformInterfaceException;import fr.mailjet.rest.impl.RESTServiceFactory;import fr.mailjet.rest.parameters.EnumReturnType;/** * L'interface de tous les services de type <i>User</i>. Cette interface * comprend toutes les méthodes définies dans l'api officielle. <br /> * <a href="http://fr.mailjet.com/docs/api/user">Documentation Mailjet</a> *  * @see RESTServiceFactory#createUserService() * @author Pitton Olivier *  */public interface UserRESTService extends MailjetRESTService {	/**	 * Retourne les informations du compte et du profile courant. <br />	 * <a href="https://fr.mailjet.com/docs/api/user/infos">Documentation	 * Mailjet</a>	 * 	 * @param parReturnType	 *          {@link EnumReturnType} le format de retour de la requête	 * @return {@link String} la réponse du serveur	 * @throws NullPointerException	 *           si le type de retour est null	 * @throws UniformInterfaceException	 *           Si le code de retour est supérieur ou égal à 300	 */	String infos(EnumReturnType parReturnType) throws UniformInterfaceException;	/**	 * Retourne la liste des domaines depuis les adresses d'envoi. <br />	 * <a href="https://fr.mailjet.com/docs/api/user/domainlist">Documentation	 * Mailjet</a>	 * 	 * @param parReturnType	 *          {@link EnumReturnType} le format de retour de la requête	 * @return {@link String} la réponse du serveur	 * @throws NullPointerException	 *           si le type de retour est null	 * @throws UniformInterfaceException	 *           Si le code de retour est supérieur ou égal à 300	 */	String domainList(EnumReturnType parReturnType) throws UniformInterfaceException;	/**	 * 	 * <br />	 * <a href="https://fr.mailjet.com/docs/api/user/senderlist">Documentation	 * Mailjet</a>	 * 	 * @param parReturnType	 *          {@link EnumReturnType} le format de retour de la requête	 * @return {@link String} la réponse du serveur	 * @throws NullPointerException	 *           si le type de retour est null	 * @throws UniformInterfaceException	 *           Si le code de retour est supérieur ou égal à 300	 */	String senderList(EnumReturnType parReturnType) throws UniformInterfaceException;	/**	 * Retourne les préférences de suivi. <br />	 * <a href="https://fr.mailjet.com/docs/api/user/trackingcheck">Documentation	 * Mailjet</a>	 * 	 * @param parReturnType	 *          {@link EnumReturnType} le format de retour de la requête	 * @return {@link String} la réponse du serveur	 * @throws NullPointerException	 *           si le type de retour est null	 * @throws UniformInterfaceException	 *           Si le code de retour est supérieur ou égal à 300	 */	String trackingCheck(EnumReturnType parReturnType) throws UniformInterfaceException;	/**	 * Ajoute un domaine au compte utilisateur. <br />	 * <a href="https://fr.mailjet.com/docs/api/user/domainadd">Documentation	 * Mailjet</a>	 * 	 * @param parType	 *          {@link EnumReturnType} le format de retour de la requête	 * @param parDomainName	 *          {@link String} le nom du domaine	 * @return {@link String} la réponse du serveur	 * @throws NullPointerException	 *           si le type de retour est null	 * @throws UniformInterfaceException	 *           Si le code de retour est supérieur ou égal à 300	 * @throws IllegalArgumentException	 *           Si le nom de domaine est nul ou vide	 */	String domainAdd(EnumReturnType parType, String parDomainName) throws UniformInterfaceException, IllegalArgumentException;	/**	 * Retourne le status du domaine dont le nom est spécifié. <br />	 * <a href="https://fr.mailjet.com/docs/api/user/domainstatus">Documentation	 * Mailjet</a>	 * 	 * @param parType	 *          {@link EnumReturnType} le format de retour de la requête	 * @param parDomainName	 *          {@link String} le nom du domaine	 * @return {@link String} la réponse du serveur	 * @throws NullPointerException	 *           si le type de retour est null	 * @throws UniformInterfaceException	 *           Si le code de retour est supérieur ou égal à 300	 * @throws IllegalArgumentException	 *           Si le nom de domaine est nul ou vide	 */	String domainStatus(EnumReturnType parType, String parDomainName) throws UniformInterfaceException, IllegalArgumentException;	/**	 * Retourne le status du domaine dont le nom est spécifié. <br />	 * <a href="https://fr.mailjet.com/docs/api/user/domainstatus">Documentation	 * Mailjet</a>	 * 	 * @param parType	 *          {@link EnumReturnType} le format de retour de la requête	 * @param parDomainName	 *          {@link String} le nom du domaine	 * @param parCheck	 *          {@link Boolean} effectue une vérification	 * @return {@link String} la réponse du serveur	 * @throws NullPointerException	 *           si le type de retour est null	 * @throws UniformInterfaceException	 *           Si le code de retour est supérieur ou égal à 300	 * @throws IllegalArgumentException	 *           Si le nom de domaine est nul ou vide	 */	String domainStatus(EnumReturnType parType, String parDomainName, Boolean parCheck) throws UniformInterfaceException, IllegalArgumentException;	/**	 * Ajoute un email aux adresses d'envoyeur <br />	 * <a href="https://fr.mailjet.com/docs/api/user/senderadd">Documentation	 * Mailjet</a>	 * 	 * @param parType	 *          {@link EnumReturnType} le format de retour de la requête	 * @param parEmail	 *          {@link String} l'email à ajouter	 * @return {@link String} la réponse du serveur	 * @throws NullPointerException	 *           si le type de retour est null	 * @throws UniformInterfaceException	 *           Si le code de retour est supérieur ou égal à 300	 * @throws IllegalArgumentException	 *           Si l'email est nul ou vide	 */	String senderAdd(EnumReturnType parType, String parEmail) throws UniformInterfaceException, IllegalArgumentException;	/**	 * Vérifie le statut du contact de l'email spécifié <br />	 * <a href="https://fr.mailjet.com/docs/api/user/senderstatus">Documentation	 * Mailjet</a>	 * 	 * @param parType	 *          {@link EnumReturnType} le format de retour de la requête	 * @param parEmail	 *          {@link String} l'email dont on cherche le statut	 * @return {@link String} la réponse du serveur	 * @throws NullPointerException	 *           si le type de retour est null	 * @throws UniformInterfaceException	 *           Si le code de retour est supérieur ou égal à 300	 * @throws IllegalArgumentException	 *           Si l'email est nul ou vide	 */	String senderStatus(EnumReturnType parType, String parEmail) throws UniformInterfaceException, IllegalArgumentException;	/**	 * Met à jour les préférences de tracking comme open et click tracking <br />	 * <a href="https://fr.mailjet.com/docs/api/user/trackingupdate">Documentation	 * Mailjet</a>	 * 	 * @param parType	 *          {@link EnumReturnType} le format de retour de la requête	 * @param parOpen	 *          {@link Boolean} vrai pour activer l'open tracking, faux pour le	 *          désactiver	 * @param parClick	 *          {@link Boolean} vrai pour activer le click tracking, faux pour le	 *          désactiver	 * @return {@link String} la réponse du serveur	 * @throws NullPointerException	 *           si le type de retour est null	 * @throws UniformInterfaceException	 *           Si le code de retour est supérieur ou égal à 300	 * @throws IllegalArgumentException	 *           Si les paramètre open et click sont null	 */	String trackingUpdate(EnumReturnType parType, Boolean parOpen, Boolean parClick) throws UniformInterfaceException, IllegalArgumentException;	/**	 * Met à jour le compte utilisateur courant. <br />	 * <a href="https://fr.mailjet.com/docs/api/user/update">Documentation	 * Mailjet</a>	 * 	 * @param parType	 *          {@link EnumReturnType} le format de retour de la requête	 * @param parParameters	 *          {@link Map} la map de tous les paramètres	 * @return {@link String} la réponse du serveur	 * @throws NullPointerException	 *           si le type de retour est null	 * @throws UniformInterfaceException	 *           Si le code de retour est supérieur ou égal à 300	 */	String update(EnumReturnType parType, Map<String, String> parParameters) throws UniformInterfaceException;}