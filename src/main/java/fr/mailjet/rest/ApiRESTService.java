package fr.mailjet.rest;/* * #%L Mailjet %% Copyright (C) 2012 Pitton Olivier - olivier dot pitton at * gmail dot com %% Licensed under the Apache License, Version 2.0 (the * "License"); you may not use this file except in compliance with the License. * You may obtain a copy of the License at * http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law * or agreed to in writing, software distributed under the License is * distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY * KIND, either express or implied. See the License for the specific language * governing permissions and limitations under the License. #L% */import java.util.Map;import java.util.List;import com.sun.jersey.api.client.UniformInterfaceException;import fr.mailjet.context.MailjetContext;import fr.mailjet.rest.parameters.EnumCustomStatus;import fr.mailjet.rest.parameters.EnumKeyAuthenticateParameters;/** * L'interface de tous les services de type <i>API</i>. Cette interface comprend * toutes les méthodes définies dans l'api officielle. <a * href="http://fr.mailjet.com/docs/api/api">Documentation</a> *  * @author "Pitton Olivier <olivier dot pitton at gmail dot com>" *  */public interface ApiRESTService extends MailjetRESTService {	/**	 * Clé du paramètre "api_key" de la requête keyList. <a	 * href="http://fr.mailjet.com/docs/api/api/keylist">doc</a>	 */	static public final String	_apiKeyListProperty			= "api_key";	/**	 * Clé du paramètre "api_key" des requêtes keySecret et keySecretChange <a	 * href="http://fr.mailjet.com/docs/api/api/keylist">doc</a>	 */	static public final String	_apiKeyProperty					= "apikey";	/**	 * Clé du paramètre "active" de la requête keyList. <a	 * href="http://fr.mailjet.com/docs/api/api/keylist">doc</a>	 */	static public final String	_activeProperty					= "active";	/**	 * Clé du paramètre "custom_status" de la requête keyList. <a	 * href="http://fr.mailjet.com/docs/api/api/keylist">doc</a>	 */	static public final String	_customStatusProperty		= "custom_status";	/**	 * Clé du paramètre "name" de la requête keyList. <a	 * href="http://fr.mailjet.com/docs/api/api/keylist">doc</a>	 */	static public final String	_nameProperty						= "name";	/**	 * Clé du paramètre "type" de la requête keyList. <a	 * href="http://fr.mailjet.com/docs/api/api/keylist">doc</a>	 */	static public final String	_typeProperty						= "type";	/**	 * Clé du paramètre "allowed_access" de la requête keyAuthenticate. <a	 * href="https://fr.mailjet.com/docs/api/api/keyauthenticate">doc</a>	 */	static public final String	_defaultAccessProperty	= "allowed_access";	/**	 * Liste l'ensemble des Clés publiques des sous-comptes. <b>Les paramètres à	 * spécifier pour la requête autre le type de retour supportent la valeur	 * null. Ces-derniers étant optionnels.</b> <a	 * href="http://fr.mailjet.com/docs/api/api/keylist">doc</a>	 * 	 * @param parType	 *          {@link EnumReturnType} le format de retour de la requête	 * @param parIsActive	 *          {@link Boolean} vrai pour les Clés actives, faux pour les Clés	 *          inactives. Peut être null.	 * @return {@link String} la réponse du serveur dans le format spécifié	 * @throws NullPointerException	 *           si le type de retour est null	 * @throws UniformInterfaceException	 *           si les paramètres d'authentification sont invalides	 */	String keyList(final EnumReturnType parType, final Boolean parIsActive) throws UniformInterfaceException;	/**	 * Liste l'ensemble des Clés publiques des sous-comptes. <b>Les paramètres à	 * spécifier pour la requête autre le type de retour supportent la valeur	 * null. Ces-derniers étant optionnels.</b> <a	 * href="http://fr.mailjet.com/docs/api/api/keylist">doc</a>	 * 	 * @param parType	 *          {@link EnumReturnType} le format de retour de la requête	 * @param parIsActive	 *          {@link Boolean} vrai pour les Clés actives, faux pour les Clés	 *          inactives.	 * @param parStatus	 *          {@link EnumCustomStatus} le status courant des Clés recherchés.	 * @return {@link String} la réponse du serveur dans le format spécifié	 * @see EnumCustomStatus	 * @throws NullPointerException	 *           si le type de retour est null	 * @throws UniformInterfaceException	 *           si les paramètres d'authentification sont invalides	 */	String keyList(final EnumReturnType parType, final Boolean parIsActive, final EnumCustomStatus parStatus) throws UniformInterfaceException;	/**	 * Liste l'ensemble des Clés publiques des sous-comptes. <b>Les paramètres à	 * spécifier pour la requête autre le type de retour supportent la valeur	 * null. Ces-derniers étant optionnels.</b> <a	 * href="http://fr.mailjet.com/docs/api/api/keylist">doc</a>	 * 	 * @param parType	 *          {@link EnumReturnType} le format de retour de la requête	 * @param parIsActive	 *          {@link Boolean} vrai pour les Clés actives, faux pour les Clés	 *          inactives.	 * @param parStatus	 *          {@link EnumCustomStatus} le status courant des Clés recherchés.	 * @param parName	 *          {@link String} le nom recherchÃ©. Ce paramètre supporte le "*"	 *          pour effectuer une recherche. Exemple : "ab*yz" renverra tous les	 *          noms commençant par "ab" et finissant par "yz".	 * @return {@link String} la réponse du serveur dans le format spécifié	 * @see EnumCustomStatus	 * @throws NullPointerException	 *           si le type de retour est null	 * @throws UniformInterfaceException	 *           si les paramètres d'authentification sont invalides	 */	String keyList(final EnumReturnType parType, final Boolean parIsActive, final EnumCustomStatus parStatus, final String parName)			throws UniformInterfaceException;	/**	 * Liste l'ensemble des Clés publiques des sous-comptes. <b>Les paramètres à	 * spécifier pour la requête autre le type de retour supportent la valeur	 * null. Ces-derniers étant optionnels.</b> <a	 * href="http://fr.mailjet.com/docs/api/api/keylist">doc</a>	 * 	 * @param parType	 *          {@link EnumReturnType} le format de retour de la requête	 * @param parIsActive	 *          {@link Boolean} vrai pour les Clés actives, faux pour les Clés	 *          inactives.	 * @param parStatus	 *          {@link EnumCustomStatus} le status courant des Clés recherchés.	 * @param parName	 *          {@link String} le nom recherchÃ©. Ce paramètre supporte le "*"	 *          pour effectuer une recherche. Exemple : "ab*yz" renverra tous les	 *          noms commençant par "ab" et finissant par "yz".	 * @param parUserType	 *          {@link Boolean} le type d'utilisateur. Vrai pour le main et faux	 *          pour les sous-utilisateurs.	 * @return {@link String} la réponse du serveur dans le format spécifié	 * @see EnumCustomStatus	 * @throws NullPointerException	 *           si le type de retour est null	 * @throws UniformInterfaceException	 *           si les paramètres d'authentification sont invalides	 */	String keyList(final EnumReturnType parType, final Boolean parIsActive, final EnumCustomStatus parStatus, final String parName,			final Boolean parUserType) throws UniformInterfaceException;	/**	 * Retourne la Clé secrète de l'un des comptes ou sous-comptes. <a	 * href="http://fr.mailjet.com/docs/api/api/keysecret">doc</a>	 * 	 * @param parType	 *          {@link EnumReturnType} le format de retour de la requête	 * @return {@link String} la réponse du serveur	 * @throws NullPointerException	 *           si le type de retour est null	 * @throws UniformInterfaceException	 *           Si le code de retour est supérieur ou égal à 300	 */	String keySecret(final EnumReturnType parType) throws UniformInterfaceException;	/**	 * Demande un changement de Clé secrète pour la Clé publique du	 * {@link MailjetContext}. <a	 * href="https://fr.mailjet.com/docs/api/api/keysecretchange">doc</a>	 * 	 * @param parType	 *          {@link EnumReturnType} le format de retour de la requête	 * @return {@link String} la réponse du serveur	 * @throws NullPointerException	 *           si le type de retour est null	 * @throws UniformInterfaceException	 *           Si le code de retour est supérieur ou égal à 300	 */	String keySecretChange(final EnumReturnType parType) throws UniformInterfaceException;	/**	 * Ajoute un couple de clés publique / privé avec le nom de sous-compte	 * spécifié. <a href="https://fr.mailjet.com/docs/api/api/keyadd">doc</a>	 * 	 * @param parType	 *          {@link EnumReturnType} le format de retour de la requête	 * @param parCustomName	 *          {@link String} le nom du sous-compte	 * @return {@link String} la réponse du serveur	 * @throws NullPointerException	 *           si le type de retour est null	 * @throws UniformInterfaceException	 *           Si le code de retour est supérieur ou égal à 300	 * @throws IllegalArgumentException	 *           Si le nom du sous-compte est null ou vide	 */	String keyAdd(final EnumReturnType parType, final String parCustomName) throws UniformInterfaceException, IllegalArgumentException;	/**	 * Ajoute un couple de clés publique / privé avec le nom de sous-compte et le	 * status spécifiés. <a	 * href="https://fr.mailjet.com/docs/api/api/keyadd">doc</a>	 * 	 * @param parType	 *          {@link EnumReturnType} le format de retour de la requête	 * @param parCustomName	 *          {@link String} le nom du sous-compte	 * @param parStatus	 *          {@link EnumCustomStatus} le status	 * @return {@link String} la réponse du serveur	 * @throws NullPointerException	 *           si le type de retour est null	 * @throws UniformInterfaceException	 *           Si le code de retour est supérieur ou égal à 300	 * @throws IllegalArgumentException	 *           Si le nom du sous-compte est null ou vide	 * @see EnumCustomStatus	 */	String keyAdd(final EnumReturnType parType, final String parCustomName, final EnumCustomStatus parStatus) throws UniformInterfaceException,			IllegalArgumentException;	/**	 * Partial white-labeling of Mailjet thru secure token access. <a	 * href="https://fr.mailjet.com/docs/api/api/keyauthenticate">doc</a>	 * 	 * @param parType	 *          {@link EnumReturnType} le format de retour de la requête	 * @param parAllowedAccess	 *          {@link List} la liste de tous les accès autorisés	 * @return {@link String} la réponse du serveur	 * @throws NullPointerException	 *           si le type de retour est null	 * @throws UniformInterfaceException	 *           Si le code de retour est supérieur ou égal à 300	 * @throws IllegalArgumentException	 *           Si la liste est null ou vide	 */	String keyAuthenticate(final EnumReturnType parType, final List<String> parAllowedAccess) throws UniformInterfaceException,			IllegalArgumentException;	/**	 * Partial white-labeling of Mailjet thru secure token access. <a	 * href="https://fr.mailjet.com/docs/api/api/keyauthenticate">doc</a>	 * 	 * @param parType	 *          {@link EnumReturnType} le format de retour de la requête	 * @param parAllowedAccess	 *          {@link List} la liste de tous les accès autorisés	 * @param parParameters	 *          {@link Map} la map de tous les paramètres pour la requête	 * @return {@link String} la réponse du serveur	 * @throws NullPointerException	 *           si le type de retour est null	 * @throws UniformInterfaceException	 *           Si le code de retour est supérieur ou égal à 300	 * @throws IllegalArgumentException	 *           Si la liste est null ou vide	 */	String keyAuthenticate(final EnumReturnType parType, final List<String> parAllowedAccess,			final Map<EnumKeyAuthenticateParameters, String> parParameters) throws UniformInterfaceException, IllegalArgumentException;	/**	 * Met à jour la clé publique courante. <a	 * href="https://fr.mailjet.com/docs/api/api/keyupdate">doc</a>	 * 	 * @param parType	 *          {@link EnumReturnType} le format de retour de la requête	 * @return {@link String} la réponse du serveur	 * @throws NullPointerException	 *           si le type de retour est null	 * @throws UniformInterfaceException	 *           Si le code de retour est supérieur ou égal à 300	 * @see MailjetContext#getApiKey()	 */	String keyUpdate(final EnumReturnType parType) throws UniformInterfaceException;	/**	 * Met à jour la clé publique spécifiée. <a	 * href="https://fr.mailjet.com/docs/api/api/keyupdate">doc</a>	 * 	 * @param parType	 *          {@link EnumReturnType} le format de retour de la requête	 * @param parApiKey	 *          {@link String} la clé publique à mettre à jour.	 * @return {@link String} la réponse du serveur	 * @throws NullPointerException	 *           si le type de retour est null	 * @throws UniformInterfaceException	 *           Si le code de retour est supérieur ou égal à 300	 * @throws IllegalArgumentException	 *           Si la clé publique spécifiée est null ou vide	 */	String keyUpdate(final EnumReturnType parType, final String parApiKey) throws UniformInterfaceException, IllegalArgumentException;	/**	 * Met à jour la clé publique spécifiée avec le status spécifié <a	 * href="https://fr.mailjet.com/docs/api/api/keyupdate">doc</a>	 * 	 * @param parType	 *          {@link EnumReturnType} le format de retour de la requête	 * @param parApiKey	 *          {@link String} la clé publique à mettre à jour.	 * @param parStatus	 *          {@link EnumCustomStatus} le status	 * @return {@link String} la réponse du serveur	 * @throws NullPointerException	 *           si le type de retour est null	 * @throws UniformInterfaceException	 *           Si le code de retour est supérieur ou égal à 300	 * @throws IllegalArgumentException	 *           Si la clé publique spécifiée est null ou vide	 */	String keyUpdate(final EnumReturnType parType, final String parApiKey, final EnumCustomStatus parStatus) throws UniformInterfaceException,			IllegalArgumentException;	/**	 * Met à jour la clé publique spécifiée avec le status et le nom spécifié <a	 * href="https://fr.mailjet.com/docs/api/api/keyupdate">doc</a>	 * 	 * @param parType	 *          {@link EnumReturnType} le format de retour de la requête	 * @param parApiKey	 *          {@link String} la clé publique à mettre à jour.	 * @param parStatus	 *          {@link EnumCustomStatus} le status	 * @param parName	 *          {@link String} le nouveau nom	 * @return {@link String} la réponse du serveur	 * @throws NullPointerException	 *           si le type de retour est null	 * @throws UniformInterfaceException	 *           Si le code de retour est supérieur ou égal à 300	 * @throws IllegalArgumentException	 *           Si la clé publique spécifiée est null ou vide	 */	String keyUpdate(final EnumReturnType parType, final String parApiKey, final EnumCustomStatus parStatus, final String parName)			throws UniformInterfaceException, IllegalArgumentException;}